'name': 'PHP Markdown Extra'
'scopeName': 'source.pme'
'fileTypes': [
  'markdown'
  'md'
  'mdown'
  'mkd'
  'mkdown'
  'rmd'
  'ron'
]
'patterns': [
  {
    'begin': '(?<=^|[^\\w\\d\\*])\\*\\*\\*(?!$|\\*|\\s)'
    'end': '(?<!^|\\s)\\*\\*\\**\\*(?=$|[^\\w|\\d])'
    'name': 'markup.bold.italic.pme'
  }
  {
    'begin': '(?<=^|[^\\w\\d_])___(?!$|_|\\s)'
    'end': '(?<!^|\\s)___*_(?=$|[^\\w|\\d])'
    'name': 'markup.bold.italic.pme'
  }
  {
    'begin': '(?<=^|[^\\w\\d\\*])\\*\\*(?!$|\\*|\\s)'
    'end': '(?<!^|\\s)\\*\\**\\*(?=$|[^\\w|\\d])'
    'name': 'markup.bold.pme'
  }
  {
    'begin': '(?<=^|[^\\w\\d_])__(?!$|_|\\s)'
    'end': '(?<!^|\\s)__*_(?=$|[^\\w|\\d])'
    'name': 'markup.bold.pme'
  }
  {
    'begin': '(?<=^|[^\\w\\d\\*])\\*(?!$|\\*|\\s)'
    'end': '(?<!^|\\s)\\**\\*(?=$|[^\\w|\\d])'
    'name': 'markup.italic.pme'
  }
  {
    'begin': '(?<=^|[^\\w\\d_\\{\\}])_(?!$|_|\\s)'
    'end': '(?<!^|\\s)_*_(?=$|[^\\w|\\d])'
    'name': 'markup.italic.pme'
  }
  {
    'begin': '(?<=^|[^\\w\\d~])~~(?!$|~|\\s)'
    'end': '(?<!^|\\s)~~*~(?=$|[^\\w|\\d])'
    'name': 'markup.strike.pme'
  }
  {
    'begin': '^#{1}\\s+'
    'end': '$'
    'name': 'markup.heading.heading-1.pme'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '^#{2}\\s+'
    'end': '$'
    'name': 'markup.heading.heading-2.pme'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '^#{3}\\s+'
    'end': '$'
    'name': 'markup.heading.heading-3.pme'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '^#{4}\\s+'
    'end': '$'
    'name': 'markup.heading.heading-4.pme'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '^#{5}\\s+'
    'end': '$'
    'name': 'markup.heading.heading-5.pme'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '^#{6}\\s+'
    'end': '$'
    'name': 'markup.heading.heading-6.pme'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }

  {
    'match': '(&)[a-zA-Z0-9]+(;)'
    'name': 'constant.character.entity.pme'
    'captures':
      '1':
        'name': 'punctuation.definition.entity.pme'
      '2':
        'name': 'punctuation.definition.entity.pme'
  }
  {
    'match': '(&)#[0-9]+(;)'
    'name': 'constant.character.entity.pme'
    'captures':
      '1':
        'name': 'punctuation.definition.entity.pme'
      '2':
        'name': 'punctuation.definition.entity.pme'
  }
  {
    'match': '(&)#x[0-9a-fA-F]+(;)'
    'name': 'constant.character.entity.pme'
    'captures':
      '1':
        'name': 'punctuation.definition.entity.pme'
      '2':
        'name': 'punctuation.definition.entity.pme'
  }
  {
    'match': '^\\s*[*]{3,}\\s*$'
    'name': 'comment.hr.pme'
  }
  {
    'match': '^\\s*[-]{3,}\\s*$'
    'name': 'comment.hr.pme'
  }
  {
    'begin': '^\\s*[`~]{3,}\\s*coffee-?(script)?\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*[`~]{3,}$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.coffee.pme'
    'contentName': 'source.coffee'
    'patterns': [
      {
        'include': 'source.coffee'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*(javascript|js)\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.js.pme'
    'contentName': 'source.js'
    'patterns': [
      {
        'include': 'source.js'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*(markdown|mdown|md)\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.pme'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*json\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.json.pme'
    'contentName': 'source.json'
    'patterns': [
      {
        'include': 'source.json'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*css\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.css.pme'
    'contentName': 'source.css'
    'patterns': [
      {
        'include': 'source.css'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*less\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.less.pme'
    'contentName': 'source.css.less'
    'patterns': [
      {
        'include': 'source.css.less'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*xml\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.xml.pme'
    'contentName': 'text.xml'
    'patterns': [
      {
        'include': 'text.xml'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*(ruby|rb)\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.ruby.pme'
    'contentName': 'source.ruby'
    'patterns': [
      {
        'include': 'source.ruby'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*java\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.java.pme'
    'contentName': 'source.java'
    'patterns': [
      {
        'include': 'source.java'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*erlang\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.erlang.pme'
    'contentName': 'source.erlang'
    'patterns': [
      {
        'include': 'source.erlang'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*cs(harp)?\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.cs.pme'
    'contentName': 'source.cs'
    'patterns': [
      {
        'include': 'source.cs'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*php\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.php.pme'
    'contentName': 'source.php'
    'patterns': [
      {
        'include': 'source.php'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*(sh|bash)\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.shell.pme'
    'contentName': 'source.shell'
    'patterns': [
      {
        'include': 'source.shell'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*py(thon)?\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.python.pme'
    'contentName': 'source.python'
    'patterns': [
      {
        'include': 'source.python'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*c\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.c.pme'
    'contentName': 'source.c'
    'patterns': [
      {
        'include': 'source.c'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*c(pp|\\+\\+)\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.c++.pme'
    'contentName': 'source.c++'
    'patterns': [
      {
        'include': 'source.c++'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*(objc|objective-c)\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.objc.pme'
    'contentName': 'source.objc'
    'patterns': [
      {
        'include': 'source.objc'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*html\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.html.pme'
    'contentName': 'source.html.basic'
    'patterns': [
      {
        'include': 'text.html.basic'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*ya?ml\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.yaml.pme'
    'contentName': 'source.yaml'
    'patterns': [
      {
        'include': 'source.yaml'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,})\\s*elixir\\s*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.code.elixir.pme'
    'contentName': 'source.elixir'
    'patterns': [
      {
        'include': 'source.elixir'
      }
    ]
  }
  {
    'begin': '^\\s*([`~]{3,}).*$'
    'beginCaptures':
      '0':
        'name': 'support.pme'
    'end': '^\\s*\\1$'
    'endCaptures':
      '0':
        'name': 'support.pme'
    'name': 'markup.raw.pme'
  }
  {
    'begin': '(`+)(?!$)'
    'end': '\\1'
    'name': 'markup.raw.pme'
  }
  {
    'match': '\\[!\\[([^\\]]*)\\]\\(([^\\)]+)\\)\\](\\(([^\\)]+)\\)|\\[([^\\]]+)\\])'
    'name': 'link'
    'captures':
      '1':
        'name': 'entity.pme'
      '2':
        'name': 'markup.underline.link.pme'
      '4':
        'name': 'markup.underline.link.pme'
      '5':
        'name': 'markup.underline.link.pme'
  }
  {
    'match': '\\[!\\[([^\\]]*)\\]\\[([^\\]]+)\\]\\](\\(([^\\)]+)\\)|\\[([^\\]]+)\\])'
    'name': 'link'
    'captures':
      '1':
        'name': 'entity.pme'
      '2':
        'name': 'markup.underline.link.pme'
      '4':
        'name': 'markup.underline.link.pme'
      '5':
        'name': 'markup.underline.link.pme'
  }
  {
    'match': '!?\\[([^\\]]*)\\]\\(([^\\)]+)\\)'
    'name': 'link'
    'captures':
      '1':
        'name': 'entity.pme'
      '2':
        'name': 'markup.underline.link.pme'
  }
  {
    'match': '!?\\[([^\\]]*)\\]\\[([^\\]]*)\\]'
    'name': 'link'
    'captures':
      '1':
        'name': 'entity.pme'
      '2':
        'name': 'markup.underline.link.pme'
  }
  {
    'match': '^\\s*\\[([^\\]]+)\\]\\s*:\\s*<([^>]+)>'
    'name': 'link'
    'captures':
      '1':
        'name': 'entity.pme'
      '2':
        'name': 'markup.underline.link.pme'
  }
  {
    'match': '^\\s*\\[([^\\]]+)\\]\\s*:\\s*(\\S+)'
    'name': 'link'
    'captures':
      '1':
        'name': 'entity.pme'
      '2':
        'name': 'markup.underline.link.pme'
  }
  {
    'match': '^\\s*([*+-])[ \\t]+'
    'captures':
      '1':
        'name': 'variable.unordered.list.pme'
  }
  {
    'match': '^\\s*(\\d+\\.)[ \\t]+'
    'captures':
      '1':
        'name': 'variable.ordered.list.pme'
  }
  {
    'match': '^\\s*(>)(.*)'
    'captures':
      '1':
        'name': 'support.quote.pme'
      '2':
        'name': 'comment.quote.pme'
  }
  {
    'match': '(?<=^|\\s|"|\'|\\(|\\[)(@)(\\w[-\\w]*)(?=[\\s"\'.,;\\)\\]])'
    'captures':
      '1':
        'name': 'variable.mention.pme'
      '2':
        'name': 'string.username.pme'
  }
  {
    'match': '(?<=^|\\s|"|\'|\\(|\\[)(#)(\\d+)(?=[\\s"\'\\.,;\\)\\]])'
    'captures':
      '1':
        'name': 'variable.issue.tag.pme'
      '2':
        'name': 'string.issue.number.pme'
  }
  {
    'begin': '<!--'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.pme'
    'end': '--\\s*>'
    'name': 'comment.block.pme'
  }
]
